{
  "version": 1,
  "name": "tutorial 7 - segment registers",
  "registers": {
    "sp": 32,
    "bp": 32
  },
  "memory": {},
  "code": "; maybe you wondered, how we are able to use all 1 MB (0x100000) of memory, if the highest value 16-bit registers can store is 0xffff - we use segment registers! \n\n; let's use segment registers!\n; mov(e) value 0x2000 to e(xtra) s(egment)\nmov es, 0x2000\nmov ax, 0x2000\nmov es, ax\n\n; ehm... there is an error\n; simulator will skip instructions with errors if you try to execute them and will always show you error message. Hover over error icon above with mouse to see more information and fix the error.\n\n; continue after you have fixed the error\n\n\n\n\n; default segment registers table:\n;  _______________________________\n; | segment   | offset registers |\n; |___________|__________________|\n; | cs        | ip               |\n; | ds        | bx, di, si       |\n; | ss        | sp, bp           |\n; | es        |                  |\n; |___________|__________________|\n\n\n; this is how we can override default segment register with es\nmov es:[0], ax\n; \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "shownModules": {
    "showCalculator": false,
    "showRegisters": true,
    "showScreen": false,
    "showKeyboard": false,
    "showStack": true,
    "showMemory": true,
    "showCodeEditor": true
  }
}